{% set varAggrid = grid.vars.stingerSoftAggrid_js_var %}
{% set varAggridOptions = "stingerSoftAggridOptions" ~ grid.vars.aggrid_js_id %}
{% set varOptions = "stingerSoftOptions" ~ grid.vars.aggrid_js_id %}
{% import '@StingerSoftAggrid/Grid/macros.html.twig' as me %}
var {{ varAggrid }};
jQuery(document).ready(function () {
	if(typeof moment !== 'undefined') {
		moment.locale('{{ app.request.locale|default('en') }}');
	}

	// let the grid know which columns and what data to use
	var {{ varAggridOptions }} = {% include '@StingerSoftAggrid/Grid/grid_options.js.twig' with {'grid': grid, 'columns': grid.columns} %};
	{% if grid.vars.nativeOptions != false %}
	{{ varAggridOptions }} = jQuery.extend({{ varAggridOptions }}, {{ grid.vars.nativeOptions|json_encode|raw }});
	{% endif %}
	var {{ varOptions }} = {% include '@StingerSoftAggrid/Grid/stinger_options.js.twig' with {'options': grid.vars} %}

	{{ varAggrid }} = new StingerSoftAggrid('#{{ grid.vars.aggrid_id }}');
	{{ varAggrid }}.init({{ varAggridOptions }}, {{ varOptions }});

	{# TODO add recursion for children - Denkt doch auch mal an die Kinder! #}
	{% for column in grid.columns %}
		{% if column.vars.exportable is defined and column.vars.exportable is not same as(false) %}
			{{ varAggrid }}.addExportableColumn({{ column.vars.colId|default(column.path)|json_encode|raw }}, {
				'exportValueFormatter': {{ column.vars.exportValueFormatter|default(null)|json_encode|raw }}
			});
		{% endif %}
		{% if column.vars.clipboardValueFormatter %}
			{{ varAggrid }}.setClipboardValueFormatter(
				{{ column.vars.colId|default(column.path)|json_encode|raw }},
				{{ me.functionalize(column.vars.clipboardValueFormatter) }}
			);
		{% endif %}
	{% endfor %}
})
